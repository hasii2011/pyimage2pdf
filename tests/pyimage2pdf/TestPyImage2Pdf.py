
from unittest import TestSuite
from unittest import main as unitTestMain

from os import pathsep as osPathSep

from pathlib import Path

from codeallybasic.ResourceManager import ResourceManager
from codeallybasic.UnitTestBase import UnitTestBase

from pyimage2pdf.PyImage2Pdf import PyImage2Pdf


IMAGE_FILE_NAME:    str  = 'CompactImageDump.png'


class TestPyImage2Pdf(UnitTestBase):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 31 December 2024
    """
    IMAGES_RESOURCE_PATH: str = f'resources{osPathSep}images'
    IMAGES_PACKAGE_NAME:  str = f'{UnitTestBase.RESOURCES_PACKAGE_NAME}.images'

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testInstantiation(self):

        pyimage2pdf: PyImage2Pdf = PyImage2Pdf()

        self.assertIsNotNone(pyimage2pdf, 'I should get an instance')

    def testConvert(self):

        pyimage2pdf: PyImage2Pdf = PyImage2Pdf()

        basicPath: Path = ResourceManager.computeResourcePath(resourcePath=TestPyImage2Pdf.IMAGES_RESOURCE_PATH,
                                                              packageName=TestPyImage2Pdf.IMAGES_PACKAGE_NAME)

        fqPath: Path      = basicPath / IMAGE_FILE_NAME

        pyimage2pdf.convert(imagePath=fqPath)


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestPyImage2Pdf))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
